/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: knor@technikum-wien.at
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class DefaultApiController : Controller
    { 

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Submit a new parcel to the logistics service. </remarks>
        /// <param name="newParcel"></param>
        /// <response code="200">Successfully submitted the new parcel</response>
        /// <response code="500">The operation failed due to an error.</response>
        [HttpPost]
        [Route("/api/parcel")]
        [SwaggerOperation("ParcelPost")]
        [SwaggerResponse(200, type: typeof(InlineResponse200))]
        public virtual IActionResult ParcelPost([FromBody]Parcel newParcel)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
            : default(InlineResponse200);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Track a parcel with its ID. </remarks>
        /// <param name="trackingId">The tracking ID of the parcel.</param>
        /// <response code="200">Parcel exists, here&#39;s the tracking information.</response>
        /// <response code="404">Parcel does not exist with this tracking ID.</response>
        [HttpGet]
        [Route("/api/parcel/{trackingId}")]
        [SwaggerOperation("ParcelTrackingIdGet")]
        public virtual void ParcelTrackingIdGet([FromRoute]string trackingId)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Report that a &#39;Parcel&#39; has arrived at a certain hop either &#39;Warehouse&#39; or &#39;Truck&#39; </remarks>
        /// <param name="trackingId">The tracking ID of the parcel.</param>
        /// <param name="code">The &#39;Code&#39; of the Hop (&#39;Warehouse&#39; or &#39;Truck&#39;)</param>
        /// <response code="200">Successfully reported hop.</response>
        /// <response code="500">An error occured.</response>
        [HttpPost]
        [Route("/api/parcel/{trackingId}/reportHop/{code}")]
        [SwaggerOperation("ParcelTrackingIdReportHopCodePost")]
        public virtual void ParcelTrackingIdReportHopCodePost([FromRoute]string trackingId, [FromRoute]string code)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Gets the hierarchy of &#x60;Warehouse&#x60; and &#x60;Truck&#x60; objects. </remarks>
        /// <response code="200">Successful response</response>
        /// <response code="404">No hierarchy loaded yet.</response>
        /// <response code="500">An error occurred loading.</response>
        [HttpGet]
        [Route("/api/warehouse")]
        [SwaggerOperation("WarehouseGet")]
        [SwaggerResponse(200, type: typeof(Warehouse))]
        public virtual IActionResult WarehouseGet()
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Warehouse>(exampleJson)
            : default(Warehouse);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Create the hierarchy of &#x60;Warehouse&#x60; and &#x60;Truck&#x60; objects. </remarks>
        /// <param name="warehouseRoot"></param>
        /// <response code="200">Successfully loaded.</response>
        /// <response code="500">The operation failed due to an error.</response>
        [HttpPost]
        [Route("/api/warehouse")]
        [SwaggerOperation("WarehousePost")]
        public virtual void WarehousePost([FromBody]Warehouse warehouseRoot)
        { 
            throw new NotImplementedException();
        }
    }
}
